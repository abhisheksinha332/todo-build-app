{"version":3,"sources":["components/form.js","components/Todo.js","components/todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilterTodos","useEffect","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37c2636d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Form = ({setInputText, todos, setTodos, inputText, setStatus}) => {\r\n\r\n    const inputTextHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setInputText(e.target.value);\r\n    };\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos, \r\n            {text: inputText, completed: false, id: Math.random()*1000}\r\n        ]);\r\n        setInputText(\"\");\r\n    };\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n    return(\r\n        <form>\r\n            <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n            <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n        \r\n\r\n    );\r\n};\r\n\r\n\r\nexport default Form;","import React from 'react';\r\n\r\n\r\nconst Todo = ({text, todos, todo, setTodos}) => {\r\n\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter(el => el.id !== todo.id))\r\n    }\r\n    \r\n    const completeHandler = () => {\r\n        setTodos(\r\n            todos.map((item) => {\r\n            if(item.id === todo.id){\r\n                return{\r\n                    ...item, completed : !item.completed\r\n                }\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n        \r\n    \r\n    return(\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n\r\n    );\r\n    };\r\n\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo  from \"./Todo\";\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n\r\n    return(\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n               {filteredTodos.map((todo) => (\r\n                   <Todo setTodos={setTodos} todos={todos} key={todo.id} text={todo.text} todo={todo}  />\r\n               ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default TodoList;","import { useState, useEffect } from \"react\";\nimport './App.css';\n//importing components\nimport Form from \"./components/form\";\nimport TodoList from \"./components/todolist\";\n\n\n\nfunction App() {\n\n  // useEffect(() => {\n  //   getLocalTodos();\n  // },[])\n\n  const [inputText, setInputText] = useState(\"\");\n  const [todos ,setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilterTodos] = useState([]);\n\n\n  useEffect(() => {\n    filterHandler();\n  }, [todos, status] ) ;\n\n  function filterHandler() {\n    switch (status) {\n      case 'completed':\n        setFilterTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilterTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilterTodos(todos);\n        break;\n    }\n  };\n  \n  return (\n    <div className=\"App\">\n     <header>\n       <h2>Let's Complete Pending work !</h2>\n     </header>\n     <Form inputText={inputText} todos={todos} setTodos={setTodos} setInputText={setInputText} setStatus={setStatus}  />\n     <TodoList setTodos={setTodos} todos={todos} filteredTodos={filteredTodos} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}